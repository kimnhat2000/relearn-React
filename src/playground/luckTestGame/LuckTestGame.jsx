import React, { Component } from 'react';
import NumberFormat from 'react-number-format';

class App extends Component {
  constructor (props) {
    super(props);

    this.state = {
      notice: null,
      money:1,
      chance: '',
      timeClick: 0,
      numberRange: '',
      autoGeneratedNumber: '',
      lose: false,
    };
  }

  randomNumber = () => {
    let randomNum = Math.floor((Math.random()*this.state.numberRange)+1);
    return randomNum;
  }

  rangeOfNumber = (event) => {
    let numberInput = parseInt(event.target.value, 10);
    if (numberInput > 100 || numberInput < 1) {
      this.setState({notice: 'choose a number between 1 and 100'})
      return;
    }else {
      this.setState({ numberRange: numberInput })
    }
  }

  myLuckyNumber = (event) => {
    let numberInput = parseInt(event.target.value, 10);
    if(this.state.numberRange === '') {
      this.setState({notice: 'choose your range of luck test'});
      return;
    }else if(numberInput > this.state.numberRange || numberInput < 1) {
      this.setState({notice: `choose a number between 1 and ${this.state.numberRange}`})
      return;
    } else {
      this.setState({ chance: numberInput })
    }
  }

  multiplyNumber = () => {
    if(typeof this.state.notice === 'string' || this.state.chance === '') {
      return;
    }

    let match = this.randomNumber();
    this.setState({ autoGeneratedNumber: match})
    if(match === this.state.chance) {
      this.setState({notice: 'you lose', lose: true});
    }else {
      this.setState({ timeClick: this.state.timeClick + 1, money: this.state.money * 2 });
    }
  }

  reset = () => {
    this.setState ({notice: null, money: 1, timeClick: 0, autoGeneratedNumber:'', lose: false})
  }

  render() {
    return (
      <div className="App">
        {this.state.notice ?
          <h3 className="App-title">{this.state.notice} </h3> : <h3>try your luck here</h3>
        } 
        <input placeholder='range of luck 1-100' name='range' value={this.state.numberRange} onChange={this.rangeOfNumber} type='number' />
        <input placeholder='choose a number' name='luckyNumber' value={this.state.chance} onChange={this.myLuckyNumber} type='number' />
        <div>
          <button onClick={this.multiplyNumber}>click to test your luck</button>
          <button onClick={this.reset}>try again</button>
        </div>

        {this.state.autoGeneratedNumber &&
          <h6>computer's autogenerated number is: {this.state.autoGeneratedNumber}</h6>
        }
        <div className="App-header">
                      
          <h3>time click {this.state.timeClick}</h3>

          {!this.state.lose ? 
            <h2>money: 
              <span style={{ 'color': 'rgb(0,255,0)', 'backgroundColor': 'rgb(100,100,100)' }}>
                <NumberFormat value={this.state.money} displayType={'text'} thousandSeparator={true} prefix={'$ '}/>
              </span>
            </h2> :
            <div>
              <h2>money: <span style={{ 'color': 'rgb(255,0,0)', 'backgroundColor': 'rgb(100,100,100)' }}>0 $</span></h2>
              <h5>the money you could have won is: 
                <span style={{ 'color': 'rgb(0,255,0)', 'backgroundColor': 'rgb(100,100,100)' }}>
                  <NumberFormat value={this.state.money} displayType={'text'} thousandSeparator={true} prefix={'$ '}/>
                </span> 
            </h5>
            </div>
          }
         

          {this.state.chance ? 
            <h1>your lucky number is: <span style={{'color': 'rgb(255,255,50)', 'backgroundColor': 'rgb(100,100,100)' }}>{this.state.chance}</span></h1> : <h1>choose a lucky number</h1>
          }
          
        </div>

      </div>
    );
  }
}

export default App;
